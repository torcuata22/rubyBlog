<h1>Articles</h1>
<ul>
<% @articles.each do |article|%> <%# evaluate the code enclosed in these tags %>
<li>
<%# <a href="<%=article_path(article) DON"T NEED IT ANYMORE because I'm using link_to %>
<%= link_to article.title, article %>
</li> <%# evaluate the code enclosed in these tags AND output the value it returns %>
<% end %>
</ul>

<%# The resources method also sets up URL and path helper methods that we can use to keep our code 
from depending on a specific route configuration. The values in the "Prefix" column above plus a suffix 
of _url or _path form the names of these helpers. For example, the article_path helper 
returns "/articles/#{article.id}" when given an article. We could use it to tidy up our links:
 instead of: href=/articles/<%= article.id we use href="<%= article_path(article)" %>

<%# The link_to helper renders a link with its first argument as the link's text and its second 
argument as the link's destination. If we pass a model object as the second argument, link_to will call 
the appropriate path helper to convert the object to a path. For example, if we pass an article, 
link_to will call article_path.%>